version: "3.9"
services:
  userservice:
    build:
      context: .
      dockerfile: ./backend/services/UserService/Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - sqlserver

  bookingservice:
    build:
      context: .
      dockerfile: ./backend/services/BookingService/Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - sqlserver

  servicemanagementservice:
    build:
      context: .
      dockerfile: ./backend/services/ServiceManagementService/Dockerfile
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - sqlserver

  paymentservice:
    build:
      context: .
      dockerfile: ./backend/services/PaymentService/Dockerfile
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - sqlserver

  notificationservice:
    build:
      context: .
      dockerfile: ./backend/services/NotificationService/Dockerfile
    ports:
      - "5004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - sqlserver

  reportingservice:
    build:
      context: .
      dockerfile: ./backend/services/ReportingService/Dockerfile
    ports:
      - "5005:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - sqlserver

  sqlserver:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MySuperSecretPassword123!
      - MSSQL_PID=Developer
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./database-scripts:/database-scripts
    command: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$$SA_PASSWORD" -i /database-scripts/setup.sql

volumes:
  sqlserver_data: