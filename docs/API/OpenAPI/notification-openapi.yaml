---
openapi: 3.0.3
info:
  title: Notification Management API
  description: API for managing system notifications
  version: 1.0.0

servers:
  - url: https://api.appointmentsystem.com/v1
    description: Production server

paths:
  /notifications:
    get:
      summary: Get all notifications
      description: Retrieve a paginated list of notifications with optional filtering
      tags:
        - Notifications
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: sort
          in: query
          description: Sort field
          required: false
          schema:
            type: string
            default: createdAt
        - name: order
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: userId
          in: query
          description: Filter by user ID
          required: false
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          description: Filter by notification type
          required: false
          schema:
            $ref: '../common/enums.yaml#/components/schemas/NotificationType'
        - name: isRead
          in: query
          description: Filter by read status
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

    post:
      summary: Create a new notification
      description: Create a new system notification
      tags:
        - Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationRequest'
      responses:
        '201':
          description: Notification created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

  /notifications/{id}:
    get:
      summary: Get notification by ID
      description: Retrieve detailed information about a specific notification
      tags:
        - Notifications
      parameters:
        - name: id
          in: path
          description: Notification ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

    put:
      summary: Update notification
      description: Update information for an existing notification
      tags:
        - Notifications
      parameters:
        - name: id
          in: path
          description: Notification ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationRequest'
      responses:
        '200':
          description: Notification updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

    delete:
      summary: Delete notification
      description: Remove a notification
      tags:
        - Notifications
      parameters:
        - name: id
          in: path
          description: Notification ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Notification deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

  /notifications/read-all:
    put:
      summary: Mark all notifications as read
      description: Mark all notifications for the current user as read
      tags:
        - Notifications
      responses:
        '200':
          description: All notifications marked as read
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

components:
  schemas:
    Notification:
      type: object
      required:
        - id
        - userId
        - title
        - message
        - type
        - createdAt
        - updatedAt
        - isRead
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the notification
        userId:
          type: string
          format: uuid
          description: Reference to recipient user
        title:
          type: string
          description: Notification title
        message:
          type: string
          description: Notification content
        type:
          $ref: '../common/enums.yaml#/components/schemas/NotificationType'
        isRead:
          type: boolean
          description: Read status
        sentAt:
          type: string
          format: date-time
          description: Timestamp when sent
        createdAt:
          type: string
          format: date-time
          description: Notification creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last notification update timestamp
        expiresAt:
          type: string
          format: date-time
          description: Expiration timestamp
        relatedEntityId:
          type: string
          format: uuid
          description: Reference to related entity (booking, service, etc.)

    CreateNotificationRequest:
      type: object
      required:
        - userId
        - title
        - message
        - type
      properties:
        userId:
          type: string
          format: uuid
          description: Reference to recipient user
        title:
          type: string
          description: Notification title
        message:
          type: string
          description: Notification content
        type:
          $ref: '../common/enums.yaml#/components/schemas/NotificationType'
        sentAt:
          type: string
          format: date-time
          description: Timestamp when sent
        expiresAt:
          type: string
          format: date-time
          description: Expiration timestamp
        relatedEntityId:
          type: string
          format: uuid
          description: Reference to related entity (booking, service, etc.)

    UpdateNotificationRequest:
      type: object
      properties:
        isRead:
          type: boolean
          description: Read status
        sentAt:
          type: string
          format: date-time
          description: Timestamp when sent
        expiresAt:
          type: string
          format: date-time
          description: Expiration timestamp

    NotificationResponse:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Notification'

    NotificationListResponse:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        meta:
          $ref: '../common/pagination.yaml#/components/schemas/Pagination'
        links:
          type: object
          properties:
            self:
              type: string
            first:
              type: string
            last:
              type: string
            prev:
              type: string
            next:
              type: string

    ErrorResponse:
      $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT