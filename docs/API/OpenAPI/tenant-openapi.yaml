---
openapi: 3.0.3
info:
  title: Tenant Management API
  description: API for managing tenant accounts and configurations
  version: 1.0.0

servers:
  - url: https://api.appointmentsystem.com/v1
    description: Production server

paths:
  /tenants:
    get:
      summary: Get all tenants
      description: Retrieve a paginated list of tenants with optional filtering
      tags:
        - Tenants
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: sort
          in: query
          description: Sort field
          required: false
          schema:
            type: string
            default: createdAt
        - name: order
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: isActive
          in: query
          description: Filter by active status
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved tenants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

    post:
      summary: Create a new tenant
      description: Create a new tenant account
      tags:
        - Tenants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantRequest'
      responses:
        '201':
          description: Tenant created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '409':
          description: Tenant already exists
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

  /tenants/{id}:
    get:
      summary: Get tenant by ID
      description: Retrieve detailed information about a specific tenant
      tags:
        - Tenants
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Tenant not found
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

    put:
      summary: Update tenant
      description: Update information for an existing tenant
      tags:
        - Tenants
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenantRequest'
      responses:
        '200':
          description: Tenant updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Tenant not found
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

    delete:
      summary: Delete tenant
      description: Remove a tenant (soft delete)
      tags:
        - Tenants
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Tenant deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Tenant not found
          content:
            application/json:
              schema:
                $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

components:
  schemas:
    Tenant:
      type: object
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - isActive
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the tenant
        name:
          type: string
          description: Tenant name
        description:
          type: string
          description: Tenant description
        domain:
          type: string
          description: Custom domain (e.g., `tenant1.yourdomain.com`). Used for tenant-specific login.
        isActive:
          type: boolean
          description: Tenant status
        createdAt:
          type: string
          format: date-time
          description: Tenant creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last tenant update timestamp
        logoUrl:
          type: string
          description: Tenant logo/image URL
        contactEmail:
          type: string
          format: email
          description: Contact email for tenant

    CreateTenantRequest:
      type: object
      required:
        - name
        - contactEmail
      properties:
        name:
          type: string
          description: Tenant name
        description:
          type: string
          description: Tenant description
        domain:
          type: string
          description: Custom domain (e.g., `tenant1.yourdomain.com`). Used for tenant-specific login.
        logoUrl:
          type: string
          description: Tenant logo/image URL
        contactEmail:
          type: string
          format: email
          description: Contact email for tenant

    UpdateTenantRequest:
      type: object
      properties:
        name:
          type: string
          description: Tenant name
        description:
          type: string
          description: Tenant description
        domain:
          type: string
          description: Custom domain (e.g., `tenant1.yourdomain.com`). Used for tenant-specific login.
        logoUrl:
          type: string
          description: Tenant logo/image URL
        contactEmail:
          type: string
          format: email
          description: Contact email for tenant
        isActive:
          type: boolean
          description: Tenant status

    TenantResponse:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Tenant'

    TenantListResponse:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Tenant'
        meta:
          $ref: '../common/pagination.yaml#/components/schemas/Pagination'
        links:
          type: object
          properties:
            self:
              type: string
            first:
              type: string
            last:
              type: string
            prev:
              type: string
            next:
              type: string

    ErrorResponse:
      $ref: '../common/errors.yaml#/components/schemas/ErrorResponse'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT